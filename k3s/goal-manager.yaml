apiVersion: apps/v1
kind: Deployment
metadata:
  name: goal-manager
  namespace: agi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goal-manager
  template:
    metadata:
      labels:
        app: goal-manager
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
        performance-tier: main
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      # initContainers:
      #   - name: wait-for-nats
      #     image: alpine:latest
      #     command: ['sh', '-c']
      #     args:
      #       - |
      #         echo "Waiting for NATS to be ready..."
      #         until nc -z nats 4222; do
      #           echo "NATS not ready, waiting..."
      #           sleep 2
      #         done
      #         echo "NATS is ready!"
      containers:
        - name: goal-manager
          image: stevef1uk/goal-manager:secure
          imagePullPolicy: Always
          # Use secure entrypoint which unpacks and executes the binary
          ports:
            - containerPort: 8090
              name: http
          args:
            - "-nats"
            - "nats://nats.agi.svc.cluster.local:4222"
            - "-redis"
            - "redis://redis.agi.svc.cluster.local:6379"
            - "-agent"
            - "agent_1"
          env:
            - name: SECURE_CUSTOMER_PRIVATE_PATH
              value: "/keys/customer_private.pem"
            - name: SECURE_VENDOR_TOKEN
              valueFrom:
                secretKeyRef:
                  name: secure-vendor
                  key: token
            - name: UNPACK_WORK_DIR
              value: "/tmp/unpack"
          # Temporarily disable health checks to test NATS connection
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          #   initialDelaySeconds: 15
          #   periodSeconds: 5
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: customer-key
              mountPath: /keys
              readOnly: true
      volumes:
        - name: customer-key
          secret:
            secretName: secure-customer-private
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: goal-manager
  namespace: agi
spec:
  type: ClusterIP
  selector:
    app: goal-manager
  ports:
    - port: 8090
      targetPort: http
      name: http
