FROM golang:1.25-alpine AS builder
WORKDIR /app
COPY . .
RUN go mod download
RUN cd cmd/bbc-news-ingestor && CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o ../../bin/bbc-news-ingestor .

# Use prebuilt secure-packager image to provide packager tooling
FROM stevef1uk/secure-packager:latest AS packager

FROM alpine:latest AS secure-build
RUN apk add --no-cache ca-certificates tzdata zip
WORKDIR /app
# Copy packager tools
COPY --from=packager /app/packager /usr/local/bin/packager
COPY --from=packager /app/unpack /usr/local/bin/unpack
COPY --from=packager /app/issue-token /usr/local/bin/issue-token
RUN chmod +x /usr/local/bin/packager /usr/local/bin/unpack /usr/local/bin/issue-token
# Copy built binary from builder
COPY --from=builder /app/bin/bbc-news-ingestor /app/bbc-news-ingestor

# Accept build-time public keys for customer and vendor
ARG CUSTOMER_PUBLIC_KEY=secure/customer_public.pem
ARG VENDOR_PUBLIC_KEY=secure/vendor_public.pem
COPY ${CUSTOMER_PUBLIC_KEY} /keys/customer_public.pem
COPY ${VENDOR_PUBLIC_KEY} /keys/vendor_public.pem

# Produce encrypted payload as zip with license manifest
RUN test -f /keys/customer_public.pem && test -f /keys/vendor_public.pem
RUN install -d /payload /out \
 && mv /app/bbc-news-ingestor /payload/data-processor \
 && echo "Running packager command:" \
 && echo "/usr/local/bin/packager -in /payload -out /out -pub /keys/customer_public.pem -license -vendor-pub /keys/vendor_public.pem" \
 && /usr/local/bin/packager \
     -in /payload \
     -out /out \
     -pub /keys/customer_public.pem \
     -license \
     -vendor-pub /keys/vendor_public.pem

# Final runtime image
FROM alpine:latest
RUN apk add --no-cache ca-certificates tzdata
WORKDIR /app
# runtime unpack tool and encrypted payload
COPY --from=secure-build /usr/local/bin/unpack /usr/local/bin/unpack
COPY --from=secure-build /out/encrypted_files.zip ./data-processor.enc
# entrypoint
COPY scripts/secure_entrypoint.sh ./entrypoint.sh
RUN chmod +x ./entrypoint.sh /usr/local/bin/unpack
ENTRYPOINT ["/app/entrypoint.sh"]
