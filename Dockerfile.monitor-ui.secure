FROM golang:1.25-alpine AS builder
WORKDIR /app
COPY . .
RUN go mod download
RUN cd monitor && CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o ../bin/monitor-ui .

FROM stevef1uk/secure-packager:latest AS packager

FROM alpine:latest AS secure-build
RUN apk add --no-cache ca-certificates tzdata zip curl
# Install kubectl
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl" && \
    chmod +x kubectl && \
    mv kubectl /usr/local/bin/
WORKDIR /app
COPY --from=packager /app/packager /usr/local/bin/packager
COPY --from=packager /app/unpack /usr/local/bin/unpack
COPY --from=packager /app/issue-token /usr/local/bin/issue-token
RUN chmod +x /usr/local/bin/packager /usr/local/bin/unpack /usr/local/bin/issue-token
COPY --from=builder /app/bin/monitor-ui /app/monitor-ui
COPY --from=builder /app/monitor/templates /app/monitor/templates
COPY --from=builder /app/monitor/static /app/monitor/static

ARG CUSTOMER_PUBLIC_KEY=secure/customer_public.pem
ARG VENDOR_PUBLIC_KEY=secure/vendor_public.pem
COPY ${CUSTOMER_PUBLIC_KEY} /keys/customer_public.pem
COPY ${VENDOR_PUBLIC_KEY} /keys/vendor_public.pem

# Copy everything to payload
RUN mkdir -p /payload
RUN cp -r /app/monitor/templates /payload/
RUN cp -r /app/monitor/static /payload/
RUN cp /app/monitor-ui /payload/

# Create a single tar file with everything
RUN cd /payload && tar -czf /payload/monitor-ui-complete.tar.gz .

# Move the tar file to payload root for encryption
RUN mv /payload/monitor-ui-complete.tar.gz /payload/monitor-ui.tar.gz

# Produce encrypted payload as zip with license manifest
RUN test -f /keys/customer_public.pem && test -f /keys/vendor_public.pem
RUN install -d /out \
 && echo "Running packager command:" \
 && echo "/usr/local/bin/packager -in /payload -out /out -pub /keys/customer_public.pem -license -vendor-pub /keys/vendor_public.pem" \
 && /usr/local/bin/packager \
     -in /payload \
     -out /out \
     -pub /keys/customer_public.pem \
     -license \
     -vendor-pub /keys/vendor_public.pem \
     -zip

FROM alpine:latest
RUN apk add --no-cache ca-certificates tzdata curl
# Install kubectl
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl" && \
    chmod +x kubectl && \
    mv kubectl /usr/local/bin/
WORKDIR /app
COPY --from=secure-build /usr/local/bin/unpack /usr/local/bin/unpack
COPY --from=secure-build /out/encrypted_files.zip ./monitor-ui.enc
COPY scripts/secure_entrypoint.sh ./entrypoint.sh
RUN chmod +x ./entrypoint.sh /usr/local/bin/unpack
ENTRYPOINT ["/app/entrypoint.sh"]
